## normal scopes(including posttitle scopes) ##
# ROOT = actor
# FROM = recipient
# <no scope change> = thirdparty character
## title scopes ##
# ROOT = actor
# FROM = recipient
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#

truce_notifier = {
	name = CB_NAME_TRUCE_NOTIFIER
	war_name = WAR_NAME_TRUCE_NOTIFIER
	sprite = 1
	truce_days = 3650
	is_permanent = yes
	#is_holy_war = yes
	can_ask_to_join_war = yes

	can_use = {
		OR = {
			ROOT = { has_character_modifier = holy_truce_timer }
			FROM = { has_character_modifier = holy_truce_timer }
		}
		ai = no
	}

	is_valid = {
		always = no
	}

	on_success = {
	}

	on_fail = {
	}

	on_reverse_demand = {
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

dejure_duchy_claim = {
	name = CB_NAME_DEJURECLAIM
	war_name = WAR_NAME_DEJURECLAIM
	sprite = 16
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	#is_holy_war = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = yes
	
	can_use = {
		#check to ensure the target is not valid for a holy war
		NOT = {
			ROOT = {
				OR = {
					NOT = { religion_group = pagan_group }
					is_reformed_religion = yes
				}
				OR = {
					NOR = {
						religion = hindu
						religion = buddhist
					}
					FROM = { NOT = { religion_group = indian_group } }
				}
				OR = {
					NOT = { religion_group = FROM }
					is_heresy_of = FROM
					is_parent_religion = FROM
					AND = {
						OR = {
							religion_group = muslim
							religion_group = pagan_group
							religion = paulician
						}
						NOT = { religion = FROM }
					}
				}
				NOR = {
					pacifist = yes
					same_realm = FROM
				}
			}
		}
	}

	can_use_title = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		# target title is Duke level and non-titular
		is_titular = no
		tier = duke
		# either the target has the title or their top liege is the target
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
		# either a king/emperor is using it to reclaim own de jure duchy
		# or the attacker has a county in the duchy & neither the target or anyone else who isn't a liege or vassal of the attacker does
		OR = {
			empire = {
				has_holder = yes
				OR = {
					has_law = crown_authority_2
					has_law = crown_authority_3
					has_law = crown_authority_4
				}
				ROOT = { has_landed_title = PREV }
			}
			kingdom = {
				has_holder = yes
				OR = {
					has_law = crown_authority_2
					has_law = crown_authority_3
					has_law = crown_authority_4
				}
				ROOT = { has_landed_title = PREV }
			}
			AND = {
				ROOT = {
					num_of_realm_counties = {
						value = 1
						title = PREV
					}
				}
				NOT = {
					FROM = {
						num_of_realm_counties = {
							value = 1
							title = PREV
						}
					}
					any_playable_ruler = {
						NOT = { character = ROOT }
						NOT = { character = FROM }
						NOT = { is_liege_or_above = ROOT } 
						NOT = { is_vassal_or_below = ROOT }
						num_of_realm_counties = {
							value = 1
							title = PREV
						}
					}
				}
			}
		}
		# neither the attacker nor their top liege has the title
		NOR = {
			ROOT = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = ROOT }
		}
		
		# AI will only use on AI holy orders if they're kings/emperors or of a different religion
		OR = {
			ROOT = { ai = no }
			FROM = {
				OR = {
					ai = no
					holy_order = no
					higher_tier_than = duke
					NOT = { religion = ROOT }
					NOT = { has_dlc = "Sons of Abraham" }
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		# lose 500 piety if the target is a holy order of the same religion
		if = {
			limit = {
				FROM = {
					religion = ROOT
					holy_order = yes
				}
			}
			ROOT = { piety = -500 }
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their duchy de jure claim for the [This.GetFullName] against [From.GetBestName]"
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_minus_1_effect = yes }
		}
		
		empty_province_effect = yes	
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
	}

	on_fail = {
		prestige = -100
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_reverse_demand_title = {
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_plus_1_effect = yes }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				culture = mongol
				religion_group = pagan_group
			}
			FROM = {
				culture = mongol
				religion_group = pagan_group
			}
		}
		modifier = {
			factor = 0
			ROOT = {
				NOR = {
					trait = cynical
					trait = ambitious
				}
				rightful_religious_head_scope = { character = FROM }
			}
		}
	}
}

vassalize = { # Subjugate
	name = CB_NAME_VASSALIZE
	war_name = WAR_NAME_VASSALIZE
	sprite = 16
	truce_days = 3650
	is_permanent = yes
	can_ask_to_join_war = yes
	
	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		ROOT = {
			is_tribal = no
			is_nomadic = no
		}
		# target is a non-rebelling count+ and the same religion and culture group as the attacker or a former vassal
		FROM = {
			is_tribal = no
			is_nomadic = no
			in_revolt = no
			NOT = { trait = rebel }
			higher_tier_than = BARON
			OR = {
				AND = {
					religion = ROOT
					culture_group = ROOT
				}
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_independent }
				has_character_flag = is_rollo
			}
		}
		FROM = {
			# target is either independent or is of the same realm but under a different liege
			OR = {
				independent = yes
				AND = {
					same_realm = ROOT
					NOT = { is_liege_or_above = ROOT }
				}
			}
			# is a lower rank than the attacker
			lower_tier_than = ROOT
			# the attacker is their de jure liege or a former liege
			OR = {
				de_jure_liege_or_above = ROOT
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_independent }
			}
		}
	}

	is_valid = {
		FROM = {
			in_revolt = no
			NOT = { trait = rebel }
			OR = {
				independent = yes
				AND = {
					same_realm = ROOT
					NOT = { is_liege_or_above = ROOT }
				}
			}
			lower_tier_than = ROOT
			OR = {
				de_jure_liege_or_above = ROOT
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_independent }
			}
		}
	}

	on_success = {
		log = "[Root.GetBestName] succeeded with their vassalize CB against [From.GetBestName]"
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		FROM = {
			hidden_tooltip = {
				opinion = {
					who = ROOT
					modifier = force_vassalized
					months = 240
				}
			}
			set_defacto_liege = ROOT
			pf_liege_change_effect = yes
			
			#imprison the target if they originally became independent
			if = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_independent } }
				hidden_tooltip = { reverse_remove_opinion = { who = ROOT modifier = opinion_independent } }
				imprison = ROOT
			}
			
			pf_glory_minus2_effect = yes
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				NOR = {
					opinion = { who = FROM value = -25 }
					reverse_opinion = { who = FROM value = -25 }
					has_opinion_modifier = { who = FROM modifier = opinion_independent }
				}
			}
		}
		modifier = {
			factor = 1.5
			ROOT = {
				opinion = { who = FROM value = 10 }
				reverse_opinion = { who = FROM value = 10 }
			}
		}
		modifier = {
			factor = 1.5
			ROOT = { has_opinion_modifier = { who = FROM modifier = opinion_independent } }
		}
	}
}

restore_papacy = {
	name = CB_NAME_RESTORE_PAPACY
	war_name = WAR_NAME_RESTORE_PAPACY
	sprite = 10
	truce_days = 3650
	is_permanent = yes
	#is_holy_war = yes
	can_ask_to_join_war = yes

	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		# the target is not part of the attacker's realm
		NOT = {
			FROM = {
				same_realm = ROOT
			}
		}
		# the target is not already involved in a restore papacy war
		NOT = {
			FROM = {
				any_war = {
					using_cb = restore_papacy
				}
			}
		}
		# the AI will not attempt to use this CB a second time
		NOT = {
			ROOT = {
				ai = yes
				has_character_flag = restore_papacy_attempted
			}
		}
		# the attacker is catholic & catholicism has a RA of 20%+
		ROOT = {
			religion = catholic
			religion_authority = 0.2
		}
		FROM = {
			# the target is not the pope
			NOT = { has_landed_title = k_papal_state }
			# the target is either the pope's liege or owns Rome or has a realm lord who owns Rome
			OR = {
				k_papal_state = { holder_scope = { any_liege = { character = FROM } } }
				has_landed_title = c_roma
				any_realm_lord = {
					has_landed_title = c_roma
				}
			}
			# the pope is either independent or is a vassal of the target or the attacker
			OR = {
				k_papal_state = { holder_scope = { independent = yes } }
				k_papal_state = { holder_scope = { any_liege = { character = FROM } } }
				k_papal_state = { holder_scope = { any_liege = { character = ROOT } } }
			}
		}
	}

	on_add = {
		ROOT = {
			set_character_flag = restore_papacy_attempted
		}
	}

	on_success = {
		log = "[Root.GetBestName] succeeded with their restore papacy CB against [From.GetBestName]"
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		# the Pope regains Rome if owned by the target's realm and becomes independent if vassalized
		FROM = {
			if = {
				limit = {
					OR = {
						has_landed_title = c_roma
						any_realm_lord = {
							has_landed_title = c_roma
						}
					}
				}
				k_papal_state = {
					holder_scope = {
						add_character_modifier = { name = new_land_timer duration = 1 hidden = yes }
						c_roma = {
							usurp_title_plus_barony_if_unlanded = { target = PREV type = claim }
						}
					}
				}
			}
			if = {
				limit = {
					k_papal_state = {
						holder_scope = {
							any_liege = { character = FROM }
						}
					}
				}
				k_papal_state = {
					holder_scope = {
						set_defacto_liege = THIS
						pf_liege_change_effect = yes
					}
				}
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
			participation_scaled_piety = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 participation_scaled_piety = 100 }
		}
		FROM = {
			prestige = -200
			pf_glory_minus2_effect = yes
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
			piety = -100
		}
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -200
			piety = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = { 
		factor = 2
		modifier = {
			factor = 5
			ROOT = { trait = zealous }
		}
		modifier = {
			factor = 0
			ROOT = { trait = cynical }
		}
	}
}

restore_byzantium = { #Restore Byzantium
	name = CB_NAME_RESTOREBYZANTIUM
	war_name = WAR_NAME_RESTOREBYZANTIUM
	sprite = 16
	truce_days = 3650
	is_permanent = yes
	#is_holy_war = yes
	check_de_jure_tier = EMPEROR
	can_ask_to_join_war = yes

	can_use_title = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		# the Byzantine Empire does not exist
		e_byzantium = { has_holder = no }
		# the attacker is an independent Greek Orthodox (or a heretic) king or emperor
		ROOT = {
			OR = {
				religion = orthodox
				religion = bogomilist
				religion = nestorian
				religion = monothelite
				religion = iconoclast
			}
			culture_group = byzantine
			independent = yes
			higher_tier_than = duke
		}
		# the defender is either not Orthodox (or a heretic) or not Greek
		FROM = {
			OR = {
				NOR = { 
					religion = orthodox
					religion = bogomilist
					religion = nestorian
					religion = monothelite
					religion = iconoclast
				}
				NOT = { culture_group = byzantine }
			}
		}
		title = e_byzantium
		has_holder = no
		# byzantion's holder is in the target's realm
		c_byzantion = { holder_scope = { same_realm = FROM } }
		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
	}

	is_valid_title = {
		ROOT = {
			OR = {
				religion = orthodox
				religion = bogomilist
				religion = nestorian
				religion = monothelite
				religion = iconoclast
			}
			culture_group = byzantine
			independent = yes
		}

		FROM = {
			OR = {
				NOR = {
					religion = orthodox
					religion = bogomilist
					religion = nestorian
					religion = monothelite
					religion = iconoclast
				}
				NOT = { culture_group = byzantine }
			}
		}

		title = e_byzantium
		has_holder = no
		c_byzantion = { holder_scope = { same_realm = FROM } }

		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			imperial_decadence_minus_1_effect = yes
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		FROM = {
			prestige = -200
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their restore byzantium CB for the [This.GetFullName] against [From.GetBestName]"
		hidden_tooltip = {
			any_de_jure_vassal_title = { # take all baronies under the one we're fighting for
				limit = {
					has_holder = yes
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
			}
		}
		tooltip = { e_byzantium = { gain_title = ROOT } }
		ROOT = { set_character_flag = centralize_without_penalties }
		hidden_tooltip = {
			if = {
				limit = {
					c_byzantion = { holder_scope = { same_realm = ROOT } }
				}
				e_byzantium = {
					revoke_law = investiture_law_0
					revoke_law = investiture_law_1
					add_law = crown_authority_1
					add_law = council_privileges_0
					add_law = succ_primogeniture
					add_law = cognatic_succession
					gain_title = ROOT
				}
			}
		}
		ROOT = { clr_character_flag = centralize_without_penalties }
		#shatter empire if it's too small
		hidden_tooltip = { FROM = { character_event = { id = Plus.303 } } }
	}

	on_fail = {
		prestige = -100
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			imperial_decadence_minus_1_effect = yes
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

coastal_city_republic = { #Take a coastal city (Barony Tier)
	name = CB_NAME_COASTAL_COUNTY_REPUBLIC
	war_name = WAR_NAME_COASTAL_CITY_REPUBLIC
	sprite = 1
	truce_days = 3650
	is_permanent = yes
	check_all_titles = yes
	can_ask_to_join_war = yes
	
	allow_distant = yes # AI parameter
	
	can_use = {
		ROOT = {
			OR = {
				is_merchant_republic = yes
				is_patrician = yes
			}
			NOR = { 
				is_liege_or_above = FROM
				is_vassal_or_below = FROM 
				same_liege = FROM
				has_character_modifier = rep_cb_cd
			}
			prisoner = no
			has_regent = no
		}
	}
	
	can_use_title = {
		location = {
			port = yes
			OR = {
				# Within Free CB range
				ROOT = {
					capital_scope = {
						NOT = {
							distance = {
								where = PREVPREV # Comparing the distance between ROOT's capital and the title in question
								value = 590	#  From  aprox.Venice to East Cyprus and from Venice to Gibraltar
							}
						}	
					}
				}
				AND = { # Has a trade post here
					OR = {
						PREV = {
							holder_scope = {
								NOT = { same_realm = ROOT }
								OR = {
									is_patrician = yes
									is_merchant_republic = yes
								}
							}
						}
						trade_post_owner = {
							OR = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}				
				}
			}
			NOT = { # Prevent the AI from overextending itself, it won't understand the mechanic anyways
				ROOT = {
					ai = yes
					capital_scope = {
						distance = {
							where = PREVPREV # Comparing the distance between ROOT's capital and the title in question
							value = 590	#  From  aprox.Venice to East Cyprus and from Venice to Gibraltar
						}	
					}
				}
			}
		}
		tier = BARON
		is_republic = yes # Cities only
		is_patrician = no
		NOT = { owner = { character = FROM } } # Can't take the primary holding away from someone	
		
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
	}

	is_valid = {
		ROOT = {
			OR = {
				is_merchant_republic = yes
				is_patrician = yes
			}
		}
	}

	is_valid_title = {
		NOT = { owner = { character = FROM } } # Can't take the primary holding away from someone
	}
	
	on_add = {
		ROOT = {
			add_character_modifier = {
				name = rep_cb_cd
				duration = 1825
				hidden = no
				inherit = yes
			}
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}
	
	on_success_title = {
		log = "[Root.GetBestName] succeeded with their coastal city republic war for the [This.GetFullName] against [From.GetBestName]"
		usurp_title = ROOT
		
		if = {
			limit = {
				location = {
					port = yes
					ROOT = {
						capital_scope = {
							NOT = {
								distance = {
									where = PREVPREV # Comparing the distance between ROOT's capital and the title in question
									value = 590	#  From  aprox.Venice to East Cyprus and from Venice to Gibraltar
								}
							}	
						}
					}			
				}
			}
			custom_tooltip = {
				text = CTT_REP_IN_RANGE
			}
		}
		if = {
			limit = {
				location = {
					port = yes
					ROOT = {
						capital_scope = {
							distance = {
								where = PREVPREV # Comparing the distance between ROOT's capital and the title in question
								value = 590	#  From  aprox.Venice to East Cyprus and from Venice to Gibraltar
							}	
						}
					}			
				}			
			}
			custom_tooltip = {
				text = CTT_REP_OUT_RANGE
			}			
		}		
		
		hidden_tooltip = {
			ROOT = {
				remove_character_modifier = rep_cb_cd
				add_character_modifier = {
					name = rep_cb_cd
					duration = 1825
					hidden = no
					inherit = yes
				}
			}
		}
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		
		hidden_tooltip = {
			ROOT = { remove_character_modifier = rep_cb_cd }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		hidden_tooltip = {
			ROOT = { remove_character_modifier = rep_cb_cd }
		}
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				NOR = {
					trait = cynical
					trait = ambitious
				}
				rightful_religious_head_scope = { character = FROM }
			}
		}
	}
}

claim_on_liege_plot = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_PRETENDER
	sprite = 3
	truce_days = 3650
	hostile_against_others = yes

	can_call_allies = no
	can_ask_to_join_war = no
	major_revolt = yes
	
	can_use_title = {
		FROM = {
			has_landed_title = PREV
			reverse_has_opinion_modifier = { who = ROOT modifier = revolting_against }
		}
	}

	is_valid_title = {
		FROM = {
			has_landed_title = PREV
			reverse_has_opinion_modifier = { who = ROOT modifier = revolting_against }
		}
	}

	on_add = {
		log = "CB(claim_on_liege_plot): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		FROM = { pf_log_state_effect = yes }
		#emf_cb_dynlevy_begin_effect = yes
	}	
	
	on_success = {
		# add victory modifier for the 'Win a War' ambition
		any_attacker = { add_character_modifier = { name = victory_timer duration = 1 hidden = yes } }		
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}	
		FROM = {
			prestige = -500
			imprison = ROOT
			
			# existing vassals may declare independence
			if = {
			 	limit = { independent = yes }
			 	hidden_tooltip = { any_vassal = { character_event = { id = Plus.430 days = 3 } } }
			}
		}
	}
	
	on_success_title = {
		log = "CB(claim_on_liege_plot): VICTORY: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		
		# Prevent on_new_holder / on_unlanded edge case handlers from tearing-down any civil war state while the CB
		# completes due to, e.g., liege changes or gained titles.
		set_global_flag = pf_teardown_lock
		
		# the claimant has the wrong government type, take care of that first.
		if = {
			limit = {
				higher_tier_than = ROOT
				holder_scope = {
					OR = {
						is_feudal = yes
						is_tribal = yes
					}
				}
				ROOT = {
					is_ruler = yes
					OR = {
						is_theocracy = yes
						is_republic = yes
					}
				}
			}
			ROOT = { abdicate = yes }
		}
		# usurp primary titles
		if = {
			limit = {
				is_primary_holder_title = yes
			}
			FROM = {
				# check to see if title will be destroyed
				any_demesne_title = {
					limit = { can_destroy_title_trigger = yes }
					custom_tooltip = { text = TITLE_ENDANGERED_NO_NAME }
					set_title_flag = destroy_title
				}
				# reduce CA & TO
				any_demesne_title = {
					title_reduce_CA_effect = yes
					title_reduce_TO_effect = yes
				}
				# usurp all non-primary titles first
				any_demesne_title = {
					limit = {
						is_primary_holder_title_tier = yes
						is_primary_holder_title = no
					}
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
				}
				# usurp primary title
				primary_title = {
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					hidden_tooltip = { make_primary_title = yes }
				}
				# ruler stays within the realm
				set_defacto_liege = ROOT
				# destroy primary title if it has been reduced too much
				hidden_tooltip = {
					if = {
						limit = { primary_title = { has_title_flag = destroy_title } }
						character_event = { id = Plus.1620 days = 4 }
					}
				}
			}
			# check to see if the ruler needs to give the claimant a capital
			hidden_tooltip = {
				if = {
					limit = {
						FROM = {
							ROOT = { 
								primary_title = { 
									NOT = { has_law = succ_feudal_elective } 
									FROM = {
										capital_scope = {
											de_jure_liege_or_above = PREVPREV
										}
									}
								} 
							}
							OR = {
								num_of_count_titles = 2
								primary_title = { higher_tier_than = count }
							}
						}
					}
					FROM = {
						capital_scope = {
							county = {
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
							}
						}
					}			
				}	
			}
			# set proper liege statuses
			hidden_tooltip = {
				FROM = { 
					set_defacto_liege = ROOT 
					any_vassal = {
						limit = { NOT = { primary_title = { de_jure_liege_or_above = PREVPREV } } }
						set_defacto_liege = ROOT 
					}
				}
			}			
		}
		# usurp non-primary titles
		if = {
			limit = {
				is_primary_holder_title = no
				holder = FROM
			}
			title_reduce_CA_effect = yes
			title_reduce_TO_effect = yes
			usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		}

		clr_global_flag = pf_teardown_lock		
		
		# figure out who are the supporters, losers, and neutrals
		hidden_tooltip = {
			ROOT = {
				# clear previous civil war opinions
				pf_civil_war_clear_old_opinions_effect = yes
					
				# mark rebels as supporters
				FROM = {
					any_opinion_modifier_target = {
						limit = {
							pf_part_of_this_revolt_trigger = yes
							NOT = { character = PREVPREV }
						}
						reverse_opinion = {
							who = PREVPREV
							modifier = opinion_civil_war_supporter
							months = 60
						}
					}
				}
					
				# mark former liege and loyalists as losers
				any_vassal = {
					limit = {
						has_opinion_modifier = {
							who = FROM
							modifier = pf_loyal_toward
						}
					}
					reverse_opinion = {
						who = LIEGE
						modifier = opinion_civil_war_loser
						months = 60
					}
				}
				FROM = {
					reverse_opinion = {
						who = PREV
						modifier = opinion_civil_war_loser
						months = 60
					}
				}
					
				# remember those who chose to be neutral
				any_vassal = {
					limit = {
						has_opinion_modifier = {
							who = FROM
							modifier = pf_neutral_toward
						}
					}
					reverse_opinion = {
						who = LIEGE
						modifier = opinion_civil_war_neutral
						months = 60
					}
				}
			}
		}
		
		# check whether the primary title should be destroyed due to CA loss
		if = {
			limit = { has_title_flag = destroy_title }
			hidden_tooltip = {
				ROOT = { character_event = { id = Plus.1620 days = 4 } } #destroy title
			}
		}

		# clean up remaining TOMs
		pf_civil_war_cleanup_effect = yes

		# post-civil war event to reward allies
		hidden_tooltip = {
			ROOT = {
				#emf_dynlevy_update_effect = yes
				hidden_tooltip = { character_event = { id = PlusFaction.450 } }
			}
		}
		
		# change faction moods
		FROM = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		ROOT = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		
		#emf_cb_dynlevy_end_effect = yes
	}

	on_fail = {
		log = "CB(claim_on_liege_plot): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		ROOT = {
			prestige = -100
			imprison = FROM
		}
		
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		
		hidden_tooltip = {
			FROM = {
				remove_opinion = {
					who = ROOT
					modifier = declared_war
				}
			}
		}
	}

	on_reverse_demand = {
		log = "CB(claim_on_liege_plot): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_obj_win_war_reverse_effect = yes
		#emf_cb_dynlevy_end_effect = yes
		
		FROM = {
			# the defender loses 1 Imperial Decadence
			imperial_decadence_minus_1_effect = yes
			# add victory modifier for the 'Win a War' ambition
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			# remove any previously-existing loser TOMs
			pf_civil_war_clear_old_opinions_effect = yes
		}
		
		# apply immediate effects to the revolters
		any_attacker = {
			limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
			imprison = FROM
			hidden_tooltip = {
				reverse_opinion = { who = FROM modifier = opinion_civil_war_loser months = 60 }
				opinion = { who = FROM modifier = opinion_coerced_into_leaving_faction months = 60 }
			}
		}

		# mark loyalists and neutrals for the reward event
		hidden_tooltip = {
			FROM = {
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_supporter months = 60 }
				}
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_neutral months = 60 }
				}
			}
		}
		
		# clean up remaining TOMs
		pf_civil_war_cleanup_effect = yes
		
		ROOT = { prestige = -200 }
		
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		
		# post-civil war event to reward allies
		FROM = {
			hidden_tooltip = { character_event = { id = PlusFaction.450 } }
		}
		
		# change faction moods
		hidden_tooltip = {
			FROM = { character_event = { id = PlusFaction.200 days = 1 } }
			ROOT = { character_event = { id = PlusFaction.200 days = 1 } }
		}
	}
	
	on_reverse_demand_title = {
		remove_claim = ROOT
		ROOT = {
			custom_tooltip = { text = MAY_NOT_BECOME_PRETENDER_AGAIN }
			hidden_tooltip = {
				reverse_opinion = {
					who = FROM
					modifier = failed_to_claim_my_title
					years = 100
				}
			}
		}
	}

	on_attacker_leader_death = {
		end_war = invalid
	}
	
	on_invalidation = {
		log = "CB(claim_on_liege_plot): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
	}	
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

other_claim_on_liege_plot = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_OTHER_PRETENDER
	sprite = 3
	truce_days = 3650
	hostile_against_others = yes

	can_call_allies = no
	can_ask_to_join_war = no
	major_revolt = yes
	
	can_use_title = {
		FROM = {
			has_landed_title = PREV
			reverse_has_opinion_modifier = { who = FROMFROM modifier = revolting_against }
		}
	}

	is_valid_title = {
		FROM = {
			has_landed_title = PREV
			reverse_has_opinion_modifier = { who = FROMFROM modifier = revolting_against }
		}
	}
	
	on_add = {
		log = "CB(other_claim_on_liege_plot): START: [This.GetTitledFirstName] of [This.PrimaryTitle.GetBaseName] (ID: [This.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID]), supporting claimant [Root.GetBestName] (ID: [Root.GetID])"
		FROM = { pf_log_state_effect = yes }
		#emf_cb_dynlevy_begin_effect = yes
	}

	on_success = {
		# add victory modifier for the 'Win a War' ambition
		any_attacker = { add_character_modifier = { name = victory_timer duration = 1 hidden = yes } }
		
		# claimant is grateful to the attacker
		ROOT = {
			add_character_modifier = { name = new_land_timer duration = 1 hidden = yes }
			opinion = { who = PREV modifier = pressed_my_claim }
		}

		any_attacker = {
			limit = { 
				OR = {
					character = ROOT 
					character = PREV
				}
			}
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { 
				NOR = {
					character = ROOT 
					character = PREV
				}
			}
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		
		FROM = {
			prestige = -500
			imprison = ROOT
			
			# existing vassals may declare independence
			if = {
			 	limit = { independent = yes }
			 	hidden_tooltip = { any_vassal = { character_event = { id = Plus.430 days = 3 } } }
			}
		}
	}
	
	on_success_title = {
		log = "CB(other_claim_on_liege_plot): VICTORY: [FromFrom.GetTitledFirstName] of [FromFrom.PrimaryTitle.GetBaseName] (ID: [FromFrom.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID]), supporting claimant [Root.GetBestName] (ID: [Root.GetID])"

		# check to see if the claimant should stay with their current liege
		if = {
			limit = { FROM = { independent = no } }
			FROM = {
				set_character_flag = has_liege
				liege = { save_event_target_as = target_liege }
			}
		}
		if = {
			limit = {
				ROOT = {
					independent = no
					is_ruler = yes
					NOT = { lower_tier_than = PREV }
				}
			}
			ROOT = {
				set_character_flag = stay_in_realm
				liege = { save_event_target_as = claimant_liege }
			}
		}
		if = {
			limit = {
				OR = {
					ROOT = { is_ruler = no }
					AND = {
						FROM = { NOT = { has_character_flag = has_liege } }
						ROOT = { higher_tier_than = PREV }
					}
					AND = {
						FROM = { has_character_flag = has_liege }
						ROOT = { lower_tier_than = PREV }
					}
				}
			}
			ROOT = { set_character_flag = leave_realm }
		}

		# Prevent on_new_holder / on_unlanded edge case handlers from tearing-down any civil war state while the CB
		# completes due to, e.g., liege changes or gained titles.
		set_global_flag = pf_teardown_lock
		
		# the claimant has the wrong government type, take care of that first.
		if = {
			limit = {
				higher_tier_than = ROOT
				holder_scope = {
					OR = {
						is_feudal = yes
						is_tribal = yes
					}
				}
				ROOT = {
					is_ruler = yes
					OR = {
						is_theocracy = yes
						is_republic = yes
					}
				}
			}
			ROOT = { abdicate = yes }
		}

		# usurp primary title
		if = {
			limit = { is_primary_holder_title = yes }
			FROM = {
				# check whether title will be destroyed
				any_demesne_title = {
					limit = { can_destroy_title_trigger = yes }
					custom_tooltip = { text = TITLE_ENDANGERED_NO_NAME }
					set_title_flag = destroy_title
				}
				
				# reduce CA & TO
				any_demesne_title = {
					title_reduce_CA_effect = yes
					title_reduce_TO_effect = yes
				}
				
				# usurp primary and primary-tier titles
				any_demesne_title = {
					limit = {
						is_primary_holder_title_tier = yes
						is_primary_holder_title = no
					}
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
				}
				primary_title = {
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					hidden_tooltip = { make_primary_title = yes }
				}
				set_defacto_liege = ROOT
				
				# destroy primary title if it has been reduced too much
				hidden_tooltip = {
					if = {
						limit = { primary_title = { has_title_flag = destroy_title } }
						character_event = { id = Plus.1620 days = 4 }
					}
				}				
			}
			
			# check whether usurper needs to be given the capital county
			hidden_tooltip = {
				if = {
					limit = {
						FROM = {
							ROOT = { 
								primary_title = { 
									NOT = { has_law = succ_feudal_elective } 
									FROM = {
										capital_scope = {
											de_jure_liege_or_above = PREVPREV
										}
									}
								} 
							}
							OR = {
								num_of_count_titles = 2
								primary_title = { higher_tier_than = count }
							}
						}
					}
					FROM = {
						capital_scope = {
							county = {
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
							}
						}
					}			
				}	
			}
			
			# set proper liege statuses
			hidden_tooltip = {
				FROM = { 
					set_defacto_liege = ROOT 
					any_vassal = {
						limit = {
							NOT = { primary_title = { de_jure_liege_or_above = PREVPREV } }
						}
						set_defacto_liege = ROOT 
					}
				}
			}			
		}
		
		# usurp non-primary titles
		if = {
			limit = {
				is_primary_holder_title = no
				holder = FROM
			}
			title_reduce_CA_effect = yes
			title_reduce_TO_effect = yes
			usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }					
		}
		
		# assign the claimant to a new liege or go independent, if necessary
		if = {
			limit = {
				FROM = { has_character_flag = has_liege }
				ROOT = { has_character_flag = leave_realm }
			}
			ROOT = { set_defacto_liege = event_target:target_liege }
		}
		if = {
			limit = {
				FROM = { NOT = { has_character_flag = has_liege } }
				ROOT = { has_character_flag = leave_realm }
			}
			ROOT = { set_defacto_liege = THIS }
		}
		if = {
			limit = {
				ROOT = { has_character_flag = stay_in_realm }
			}
			ROOT = { set_defacto_liege = event_target:claimant_liege }
		}
		FROM = { clr_character_flag = has_liege }
		ROOT = { clr_character_flag = leave_realm }
		ROOT = { clr_character_flag = stay_in_realm }
		
		clr_global_flag = pf_teardown_lock
		
		# figure out who are the supporters, losers, and neutrals
		hidden_tooltip = {
			ROOT = {
				# clear previous civil war opinions
				pf_civil_war_clear_old_opinions_effect = yes
					
				# mark rebels as supporters
				FROM = {
					any_opinion_modifier_target = {
						limit = {
							pf_part_of_this_revolt_trigger = yes
							NOT = { character = PREVPREV }
						}
						reverse_opinion = {
							who = PREVPREV
							modifier = opinion_civil_war_supporter
							months = 60
						}
					}
				}
					
				# mark former liege and loyalists as losers
				any_vassal = {
					limit = {
						has_opinion_modifier = {
							who = FROM
							modifier = pf_loyal_toward
						}
					}
					reverse_opinion = {
						who = LIEGE
						modifier = opinion_civil_war_loser
						months = 60
					}
				}
				FROM = {
					reverse_opinion = {
						who = PREV
						modifier = opinion_civil_war_loser
						months = 60
					}
				}
					
				# remember those who chose to be neutral
				any_vassal = {
					limit = {
						has_opinion_modifier = {
							who = FROM
							modifier = pf_neutral_toward
						}
					}
					reverse_opinion = {
						who = LIEGE
						modifier = opinion_civil_war_neutral
						months = 60
					}
				}
			}
		}
		
		# check whether the primary title should be destroyed due to CA loss
		if = {
			limit = { has_title_flag = destroy_title }
			hidden_tooltip = {
				ROOT = { character_event = { id = Plus.1620 days = 4 } } #destroy title
			}
		}

		# clean up remaining TOMs
		pf_civil_war_cleanup_effect = yes

		# post-civil war event to reward allies
		hidden_tooltip = {
			ROOT = {
				#emf_dynlevy_update_effect = yes
				hidden_tooltip = { character_event = { id = PlusFaction.450 } }
			}
		}
		
		# change faction moods
		FROM = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		ROOT = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		
		#emf_cb_dynlevy_end_effect = yes
	}

	on_fail = {
		log = "CB(other_claim_on_liege_plot): WHITEPEACE: [This.GetTitledFirstName] of [This.PrimaryTitle.GetBaseName] (ID: [This.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID]), supporting claimant [Root.GetBestName] (ID: [Root.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		prestige = -100
		imprison = FROM
		
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		
		hidden_tooltip = {
			FROM = {
				remove_opinion = {
					who = PREV
					modifier = declared_war
				}
			}
		}
	}

	on_reverse_demand = {
		log = "CB(other_claim_on_liege_plot): DEFEAT: [This.GetTitledFirstName] of [This.PrimaryTitle.GetBaseName] (ID: [This.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID]), supporting claimant [Root.GetBestName] (ID: [Root.GetID])"

		#emf_cb_obj_win_war_reverse_effect = yes
		#emf_cb_dynlevy_end_effect = yes
		
		FROM = {
			# the defender loses 1 Imperial Decadence
			imperial_decadence_minus_1_effect = yes
			# add victory modifier for the 'Win a War' ambition
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			# remove any previously-existing loser TOMs
			pf_civil_war_clear_old_opinions_effect = yes
		}

		# apply immediate effects to the revolters
		any_attacker = {
			limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
			imprison = FROM
			hidden_tooltip = {
				reverse_opinion = { who = FROM modifier = opinion_civil_war_loser months = 60 }
				opinion = { who = FROM modifier = opinion_coerced_into_leaving_faction months = 60 }
			}
		}

		# mark loyalists and neutrals for the reward event
		hidden_tooltip = {
			FROM = {
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_supporter months = 60 }
				}
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_neutral months = 60 }
				}
			}
		}
		
		# clean up remaining TOMs
		pf_civil_war_cleanup_effect = yes
		
		prestige = -200
		
		# imprison the claimant if they are part of the realm but not a rebel
		if = {	
			limit = {
				ROOT = {
					any_liege = {
						character = FROM
						NOT = { has_opinion_modifier = { who = PREV modifier = opinion_civil_war_loser } }
					}
				}
			}
			ROOT = {
				imprison = FROM
				hidden_tooltip = {
					reverse_opinion = { who = FROM modifier = opinion_civil_war_loser months = 60 }	
				}
			}
		}
		
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		
		# post-civil war event to reward allies
		FROM = {
			hidden_tooltip = { character_event = { id = PlusFaction.450 } }
		}
		
		# change faction moods
		hidden_tooltip = {
			FROM = { character_event = { id = PlusFaction.200 days = 1 } }
			ROOT = { character_event = { id = PlusFaction.200 days = 1 } }
		}
	}
	
	on_reverse_demand_title = {
		if = {
			limit = {
				OR = {
					any_attacker = { character = ROOT }
					ROOT = { any_liege = { character = FROM } }
				}
			}
			remove_claim = ROOT
		}
		ROOT = {
			custom_tooltip = { text = MAY_NOT_BECOME_PRETENDER_AGAIN }
			hidden_tooltip = {
				reverse_opinion = {
					who = FROM
					modifier = failed_to_claim_my_title
					years = 100
				}
			}
		}
	}

	on_invalidation = {
		log = "CB(other_claim_on_liege_plot): INVALIDATED: [FromFrom.GetTitledFirstName] of [FromFrom.PrimaryTitle.GetBaseName] (ID: [FromFrom.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID]), supporting claimant [Root.GetBestName] (ID: [Root.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

cb_faction_overthrow_ruler = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_FACTION_DEPOSE
	sprite = 12
	truce_days = 3650
	
	major_revolt = yes
	can_call_allies = no
	can_ask_to_join_war = no
	
	can_use = {
		ROOT = {
			vassal_of = FROM
			has_opinion_modifier = { who = FROM modifier = revolting_against }
		}
	}

	is_valid = {
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = {
					FROM = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
			has_opinion_modifier = { who = FROM modifier = revolting_against }
		}
		FROM = {
			any_demesne_title = {
				NOT = { lower_tier_than = ROOT }
				temporary = no
			}
		}
		OR = {
			# Never invalidate the revolt due to demands being impossible to fulfill if still the original liege
			ROOT = { has_character_flag = original_war_liege }			
			# Succession law wars are invalid if the non-original liege doesn't hold the succession title
			NOT = { FROM = { has_character_flag = faction_succession_war } }
			AND = {
				ROOT = { has_character_flag = demands_seniority }
				FROM = {
					any_demesne_title = {
						higher_tier_than = COUNT
						has_title_flag = change_seniority
					}
				}
			}
			AND = {
				ROOT = { has_character_flag = demands_primogeniture }
				FROM = {
					any_demesne_title = {
						higher_tier_than = COUNT
						has_title_flag = change_primogeniture
					}
				}
			}
			AND = {
				ROOT = { has_character_flag = demands_gavelkind }
				FROM = {
					any_demesne_title = {
						higher_tier_than = COUNT
						has_title_flag = change_gavelkind
					}
				}
			}
			AND = {
				ROOT = { has_character_flag = demands_feudal_elective }
				FROM = {
					any_demesne_title = {
						higher_tier_than = COUNT
						has_title_flag = change_feudal_elective
					}
				}
			}
		}
	}

	on_add = {
		log = "CB(cb_faction_overthrow_ruler): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		FROM = { pf_log_state_effect = yes }
		#emf_cb_dynlevy_begin_effect = yes
	}
	
	on_success = {
		log = "CB(cb_faction_overthrow_ruler): VICTORY: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		
		# the defender loses 10 Imperial Decadence ("out with the old, in with the new")
		if = {
			limit = { FROM = { uses_imperial_decadence_trigger = yes } }
			FROM = {
				custom_tooltip = { text = IMPERIAL_DECADENCE_MINUS_10 }
				hidden_tooltip = {
					primary_title = {
						change_variable = { which = "imperial_decadence" value = -10 }
						set_title_flag = skip_decadence_gain
					}
				}
			}
		}

		# add victory modifier for the 'Win a War' ambition
		any_attacker = { add_character_modifier = { name = victory_timer duration = 1 hidden = yes } }
		
		# apply immediate effects to the revolters
		hidden_tooltip = {
			any_attacker = {
				limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
				
				# the revolters remember who they overthrew
				opinion = { modifier = overthrown_ruler who = FROM }
				reverse_opinion = { modifier = overthrew_me who = FROM }
				
				# and also are grateful to each other for their victory
				FROM = {
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = revolting_against_me
							}
							NOT = { character = PREVPREV }
						}
						reverse_opinion = {
							who = PREVPREV
							modifier = opinion_very_grateful
							years = 10
						}
					}
				}
			}
		}
		
		# apply revolt effects to the defender
		FROM = {
			prestige = -500
			
			# existing vassals may declare independence
			if = {
			 	limit = { independent = yes }
			 	hidden_tooltip = { any_vassal = { character_event = { id = Plus.430 days = 3 } } }
			}

			# check whether title will be destroyed (CK2Plus only)
			any_demesne_title = {
			 	limit = { can_destroy_title_trigger = yes }
			 	custom_tooltip = { text = TITLE_ENDANGERED_NO_NAME }
			 	log = "[This.GetFullName] should be destroyed as a result of the revolt"
			 	set_title_flag = destroy_title
			}
		
			# always lower CA/TO, even if it wasn't a revolt demand
			pf_lower_CA_effect = yes # lower Crown Authority
			pf_lower_TO_effect = yes # lower Tribal Organization		
		
			# enforce any rebel demands that prompted the civil war
			if = {
				limit = { ROOT = { has_character_flag = demands_revert_succession } }
				primary_title = { pf_revert_succession_law_effect = yes }
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_lower_feudal_obligations } }
				pf_lower_feudal_obligations_effect = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_lower_tribal_obligations } }
				pf_lower_tribal_obligations_effect = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_lower_city_obligations } }
				pf_lower_city_obligations_effect = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_lower_temple_obligations } }
				pf_lower_temple_obligations_effect = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_council_life_terms } }
				primary_title = { add_law_w_cooldown = council_privileges_1 }
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_seniority } }
				random_demesne_title = {
					limit = { has_title_flag = change_seniority }
					succession_w_cooldown = seniority
					clr_title_flag = change_seniority
				}
				recalc_succession = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_primogeniture } }
				random_demesne_title = {
					limit = { has_title_flag = change_primogeniture }
					succession_w_cooldown = primogeniture
					clr_title_flag = change_primogeniture
				}
				recalc_succession = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_gavelkind } }
				random_demesne_title = {
					limit = { has_title_flag = change_gavelkind }
					succession_w_cooldown = gavelkind
					clr_title_flag = change_gavelkind
				}
				recalc_succession = yes
			}
			if = {
				limit = { ROOT = { has_character_flag = demands_feudal_elective } }
				random_demesne_title = {
					limit = { has_title_flag = change_feudal_elective }
					succession_w_cooldown = feudal_elective
					clr_title_flag = change_feudal_elective
				}
				recalc_succession = yes
			}
			
			# Prevent on_new_holder / on_unlanded edge case handlers from tearing-down any civil war state while the CB
			# completes due to, e.g., liege changes or gained titles.
			set_global_flag = pf_teardown_lock
		
			# surrender any non-capital counties to rebels with claims
			save_event_target_as = current_holder
			any_demesne_title = {
				limit = {
					tier = COUNT
					location = { is_capital = no }
					can_be_given_away = yes
				}
				# give the county to de jure lieges if no rebels with claims exist
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								any_demesne_title = {
									tier = DUKE
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									has_claim = PREVPREV
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								any_demesne_title = {
									tier = DUKE
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							usurp_title_plus_barony_if_unlanded = {
								target = PREVPREV
								type = faction_demand
							}
						}
					}
				}
				# give the county to rebels with a weak claim if no rebels with strong claims exist
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = PREVPREV
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									has_strong_claim = PREVPREV
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = PREVPREV
							}
							usurp_title_plus_barony_if_unlanded = {
								target = PREVPREV
								type = faction_demand
							}
						}
					}
				}
				# give the county to rebels with a strong claim
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = PREVPREV
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = PREVPREV
							}
							usurp_title_plus_barony_if_unlanded = {
								target = PREVPREV
								type = faction_demand
							}
						}
					}
				}
			}
			
			# transfer vassals to their de jure lieges, giving preference to the
			# rebels with the lowest-tier held titles that are de jure liege to
			# each vassal (prefer most specific de jure liege) ...

			# king-tier de jure liege title vassal transfer to rebels
			any_vassal = {
				limit = {
					pf_part_of_this_revolt_trigger = no
					capital_holding = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = KING
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									higher_tier_than = PREVPREVPREV
									any_demesne_title = {
										lower_tier_than = KING
										de_jure_vassal_or_below = PREVPREVPREV
									}
								}
							}
						}
					}
				}
				capital_holding = {
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = KING
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							set_defacto_vassal = PREVPREVPREV
							#emf_dynlevy_update_effect = yes
						}
					}
				}
			}
			# duke-tier de jure liege title vassal transfer to rebels
			any_vassal = {
				limit = {
					pf_part_of_this_revolt_trigger = no
					capital_holding = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = DUKE
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									higher_tier_than = PREVPREVPREV
									any_demesne_title = {
										lower_tier_than = DUKE
										de_jure_vassal_or_below = PREVPREVPREV
									}
								}
							}
						}
					}
				}
				capital_holding = {
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = DUKE
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							set_defacto_vassal = PREVPREVPREV # any_vassal
							#emf_dynlevy_update_effect = yes
						}
					}
				}
			}
			# count-tier de jure liege title vassal transfer to rebels
			any_vassal = {
				limit = {
					pf_part_of_this_revolt_trigger = no
					capital_holding = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = COUNT
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
						}
					}
				}
				capital_holding = {
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								higher_tier_than = PREVPREVPREV
								any_demesne_title = {
									tier = COUNT
									de_jure_vassal_or_below = PREVPREVPREV
								}
							}
							set_defacto_vassal = PREVPREVPREV
						}
					}
				}
			}
			
			# save event targets for primary title and current liege
			primary_title = { save_event_target_as = former_primary_title }
			if = {
				limit = { independent = no }
				liege = { save_event_target_as = current_liege }
			}
			
			# check whether defender should have titles usurped
			if = {
				limit = {
					# this is not a succession law revolt
					NOT = { has_character_flag = faction_succession_war }
					OR = {
						# or the current ruler is not an adult
						is_adult = no
						# or this is the original liege and the current heir is not an adult
						AND = {
							ROOT = { has_character_flag = original_war_liege }
							current_heir = { is_adult = no }
						}
						# or a rebel has a claim on the primary title or is a pretender/heir
						any_opinion_modifier_target = {
							pf_part_of_this_revolt_trigger = yes
							OR = {
								has_claim = event_target:former_primary_title
								any_pretender_title = {
									title = event_target:former_primary_title
								}
								any_heir_title = {
									title = event_target:former_primary_title
								}
							}
						}
					}
				}
				# grant non-primary same-tier titles to rebels with claims
				any_demesne_title = {
					limit = {
						can_be_given_away = yes
						is_primary_holder_title_tier = yes
						is_primary_holder_title = no
					}
					# give the title to rebel with a weak claim if none with a strong claim exists
					if = {
						limit = {
							event_target:current_holder = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									has_weak_claim = PREVPREV
								}
								NOT = {
									any_opinion_modifier_target = {
										pf_part_of_this_revolt_trigger = yes
										OR = {
											has_strong_claim = PREVPREV
											any_pretender_title = {
												title = PREVPREVPREV
											}
											any_heir_title = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						}
						event_target:current_holder = {
							random_opinion_modifier_target = {
								limit = {
									pf_part_of_this_revolt_trigger = yes
									has_weak_claim = PREVPREV
								}
								usurp_title_plus_barony_if_unlanded = {
									target = PREVPREV
									type = faction_demand
								}
								#emf_dynlevy_update_effect = yes
							}
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = {
									set_defacto_liege = event_target:current_liege
								}
							}
						}
					}
					# give the title to rebel with a strong claim or is a pretender/heir
					if = {
						limit = {
							event_target:current_holder = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_strong_claim = PREVPREV
										any_pretender_title = {
											title = PREVPREVPREV
										}
										any_heir_title = {
											title = PREVPREVPREV
										}
									}
								}
							}
						}
						event_target:current_holder = {
							random_opinion_modifier_target = {
								limit = {
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_strong_claim = PREVPREV
										any_pretender_title = {
											title = PREVPREVPREV
										}
										any_heir_title = {
											title = PREVPREVPREV
										}
									}
								}
								usurp_title_plus_barony_if_unlanded = {
									target = PREVPREV
									type = faction_demand
								}
								#emf_dynlevy_update_effect = yes
							}
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = {
									set_defacto_liege = event_target:current_liege
								}
							}
						}
					}
				}

				# just abdicate if there is no rebel with a claim or a pretender/heir to primary title
				if = {
					limit = {
						event_target:current_holder = {
							has_landed_title = event_target:former_primary_title
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
										any_heir_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = Plus.306 } } #pass on tyrant/dishonorable traits
					abdicate = yes
				}
				
				# give primary title to rebel with weak claim if none with a strong claim or pretender/heir exists
				if = {
					limit = {
						event_target:current_holder = {
							has_landed_title = event_target:former_primary_title
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = event_target:former_primary_title
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_strong_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
										any_heir_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = event_target:former_primary_title
							}
							event_target:former_primary_title = {
								usurp_title_plus_barony_if_unlanded = {
									target = PREV
									type = faction_demand
								}
							}
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = {
									set_defacto_liege = event_target:current_liege
								}
							}
						}
					}
				}

				# give primary title to rebel with a strong claim if no rebel pretender/heir exists
				if = {
					limit = {
						event_target:current_holder = {
							has_landed_title = event_target:former_primary_title
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = event_target:former_primary_title
							}
							NOT = {
								any_opinion_modifier_target = {
									pf_part_of_this_revolt_trigger = yes
									OR = {
										any_pretender_title = { title = event_target:former_primary_title }
										any_heir_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = event_target:former_primary_title
							}
							event_target:former_primary_title = {
								usurp_title_plus_barony_if_unlanded = {
									target = PREV
									type = faction_demand
								}
							}
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = {
									set_defacto_liege = event_target:current_liege
								}
							}
						}
					}
				}

				# give primary title to rebel who is a pretender/heir
				if = {
					limit = {
						event_target:current_holder = {
							has_landed_title = event_target:former_primary_title
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								OR = {
									any_pretender_title = { title = event_target:former_primary_title }
									any_heir_title = { title = event_target:former_primary_title }
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								OR = {
									any_pretender_title = { title = event_target:former_primary_title }
									any_heir_title = { title = event_target:former_primary_title }
								}
							}
							event_target:former_primary_title = {
								usurp_title_plus_barony_if_unlanded = {
									target = PREV
									type = faction_demand
								}
							}
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = {
									set_defacto_liege = event_target:current_liege
								}
							}
						}
					}
				}
			}
			
			# check whether defender should simply abdicate
			if = {
				limit = {
					event_target:current_holder = { has_landed_title = event_target:former_primary_title }
					NAND = {
						# this is not a succession law revolt
						NOT = { has_character_flag = faction_succession_war }
						OR = {
							# or the current ruler is not an adult
							is_adult = no
							# or this is the original liege and the current heir is not an adult
							AND = {
								ROOT = { has_character_flag = original_war_liege }
								current_heir = { is_adult = no }
							}
							# or a rebel has a claim on the primary title or is a pretender/heir
							any_opinion_modifier_target = {
								pf_part_of_this_revolt_trigger = yes
								OR = {
									has_claim = event_target:former_primary_title
									any_pretender_title = {
										title = event_target:former_primary_title
									}
									any_heir_title = {
										title = event_target:former_primary_title
									}
								}
							}
						}
					}
				}
				hidden_tooltip = { character_event = { id = Plus.306 } } #pass on tyrant/dishonorable traits
				abdicate = yes
			}
		}
		
		clr_global_flag = pf_teardown_lock
					
		# figure out who are the supporters, losers, and neutrals
		if = {
			# primary title has changed hands
			limit = {
				event_target:former_primary_title = {
					holder_scope = {
						NOT = { character = FROM }
					}
				}
			}
			hidden_tooltip = {
				event_target:former_primary_title = {
					holder_scope = {
						# clear previous civil war opinions
						pf_civil_war_clear_old_opinions_effect = yes
						
						# mark rebels as supporters
						event_target:current_holder = {
							any_opinion_modifier_target = {
								limit = {
									pf_part_of_this_revolt_trigger = yes
									NOT = { character = PREVPREV }
								}
								reverse_opinion = {
									who = PREVPREV
									modifier = opinion_civil_war_supporter
									months = 60
								}
							}
						}
						
						# mark former liege and loyalists as losers
						any_vassal = {
							limit = {
								has_opinion_modifier = {
									who = event_target:current_holder
									modifier = pf_loyal_toward
								}
							}
							reverse_opinion = {
								who = LIEGE
								modifier = opinion_civil_war_loser
								months = 60
							}
						}
						event_target:current_holder = {
							reverse_opinion = {
								who = PREV
								modifier = opinion_civil_war_loser
								months = 60
							}
						}
						
						# remember those who chose to be neutral
						any_vassal = {
							limit = {
								has_opinion_modifier = {
									who = event_target:current_holder
									modifier = pf_neutral_toward
								}
							}
							reverse_opinion = {
								who = LIEGE
								modifier = opinion_civil_war_neutral
								months = 60
							}
						}
					}
				}
			}
		}

		# check whether the primary title should be destroyed due to CA loss
		if = {
			limit = { event_target:former_primary_title = { has_title_flag = destroy_title } }
			hidden_tooltip = {
				event_target:former_primary_title = {
					holder_scope = {
						character_event = { id = Plus.1620 days = 4 } #destroy title
					}
				}
			}
		}

		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes

		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 250
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		
		# post-civil war event to reward allies (if title has changed hands)
		if = {
			limit = {
				event_target:former_primary_title = {
					holder_scope = {
						NOT = { character = FROM }
					}
				}
			}
			event_target:former_primary_title = {
				holder_scope = {
					#emf_dynlevy_update_effect = yes
					hidden_tooltip = { character_event = { id = PlusFaction.450 } }
				}
			}
		}
		
		# change faction moods
		FROM = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		ROOT = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		
		#emf_cb_dynlevy_end_effect = yes
	}

	on_fail = {
		log = "CB(cb_faction_overthrow_ruler): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		ROOT = {
			prestige = -100
		}
		hidden_tooltip = {
			FROM = {
				remove_opinion = {
					who = ROOT
					modifier = declared_war
				}
			}
		}
	}

	on_reverse_demand = {
		log = "CB(cb_faction_overthrow_ruler): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_obj_win_war_reverse_effect = yes
		#emf_cb_dynlevy_end_effect = yes
		
		FROM = {
			# the defender loses 1 Imperial Decadence
			imperial_decadence_minus_1_effect = yes
			# add victory modifier for the 'Win a War' ambition
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_civil_war_clear_old_opinions_effect = yes
		}
		
		# apply immediate effects to the revolters
		any_attacker = {
			limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
			imprison = FROM
			hidden_tooltip = {
				reverse_opinion = { who = FROM modifier = opinion_civil_war_loser months = 60 }
				opinion = { who = FROM modifier = opinion_coerced_into_leaving_faction months = 60 }
			}
		}

		# mark loyalists and neutrals for the reward event
		hidden_tooltip = {
			FROM = {
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_supporter months = 60 }
				}
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_neutral months = 60 }
				}
			}
		}
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		ROOT = {
			prestige = -250
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		
		# post-civil war event to reward allies
		FROM = {
			hidden_tooltip = { character_event = { id = PlusFaction.450 } }
		}
		
		# change faction moods
		hidden_tooltip = {
			FROM = { character_event = { id = PlusFaction.200 days = 1 } }
			ROOT = { character_event = { id = PlusFaction.200 days = 1 } }
		}
	}

	on_invalidation = {
		log = "CB(cb_faction_overthrow_ruler): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

religious_overthrow_ruler = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_FACTION_DEPOSE
	sprite = 26
	truce_days = 3650
	
	major_revolt = yes
	can_call_allies = no
	can_ask_to_join_war = no
	
	can_use = {
		ROOT = {
			vassal_of = FROM
			has_opinion_modifier = { who = FROM modifier = revolting_against }
		}
	}

	is_valid = {
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = { 
					FROM = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
			has_opinion_modifier = { who = FROM modifier = revolting_against }
		}
		FROM = {
			any_demesne_title = {
				NOT = { lower_tier_than = ROOT }
				temporary = no
			}
			OR = {
				is_parent_religion = ROOT
				is_heresy_of = ROOT
			}
			NOT = { religion = ROOT }
		}
	}

	on_add = {
		log = "CB(cb_faction_overthrow_ruler): START: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"
		FROM = { pf_log_state_effect = yes }
		#emf_cb_dynlevy_begin_effect = yes
	}	
	
	on_success = {
		log = "[Root.GetBestName] succeeded with their religious_overthrow_ruler CB against [From.GetBestName]"
		
		# add victory modifier for the 'Win a War' ambition
		any_attacker = { add_character_modifier = { name = victory_timer duration = 1 hidden = yes } }
		
		# apply immediate effects to the revolters
		hidden_tooltip = {
			any_attacker = {
				limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
				
				# get tradition faction bonus
				hidden_tooltip = { pf_tradition_plus4_effect = yes }
				
				# the revolters remember who they overthrew
				opinion = { modifier = overthrown_ruler who = FROM }
				reverse_opinion = { modifier = overthrew_me who = FROM }
				
				# and also are grateful to each other for their victory
				FROM = {
					any_opinion_modifier_target = {
						limit = {
							reverse_has_opinion_modifier = {
								who = PREV
								modifier = revolting_against_me
							}
							NOT = { character = PREVPREV }
						}
						reverse_opinion = {
							who = PREVPREV
							modifier = opinion_very_grateful
							years = 10
						}
					}
				}
			}
		}		
		
		# apply revolt effects to the defender
		FROM = {
			prestige = -500
			save_event_target_as = current_holder
			
			# existing vassals may declare independence
			if = {
			 	limit = { independent = yes }
			 	hidden_tooltip = { any_vassal = { character_event = { id = Plus.430 days = 3 } } }
			}
			
			# check whether title will be destroyed (CK2Plus only)
			any_demesne_title = {
			 	limit = { can_destroy_title_trigger = yes }
			 	custom_tooltip = { text = TITLE_ENDANGERED_NO_NAME }
			 	log = "[This.GetFullName] should be destroyed as a result of the revolt"
			 	set_title_flag = destroy_title
			}
		
			# always lower CA/TO
			pf_lower_CA_effect = yes # lower Crown Authority
			pf_lower_TO_effect = yes # lower Tribal Organization

			# Prevent on_new_holder / on_unlanded edge case handlers from tearing-down any civil war state while the CB
			# completes due to, e.g., liege changes or gained titles.
			set_global_flag = pf_teardown_lock			
		
			# save event targets for primary title and current liege
			primary_title = { save_event_target_as = former_primary_title }
			if = {
				limit = { independent = no }
				liege = { save_event_target_as = current_liege }
			}

			# abdicate if heir is of attacker's religion
			if = {
				limit = { current_heir = { religion = ROOT } }
				hidden_tooltip = { character_event = { id = Plus.306 } } #pass on tyrant/dishonorable traits to heir
				abdicate = yes
			}
			
			# then find a proper usurper of the attacker's religion
			if = {
				limit = {
					is_ruler = yes
					current_heir = { NOT = { religion = ROOT } }
				}
				# rebel leader usurps if there is no rebel with a claim or a pretender to primary title
				if = {
					limit = {
						event_target:current_holder = {
							NOR = {
								any_opinion_modifier_target = {
									religion = ROOT
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
									}
								}
								any_realm_character = {
									religion = ROOT
									pf_part_of_this_revolt_trigger = no
									OR = {
										has_strong_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					ROOT = {
						event_target:current_holder = { abdicate_to = PREV }
						if = {
							limit = { event_target:current_liege = { always = yes } }
							hidden_tooltip = { set_defacto_liege = event_target:current_liege }
						}
					}
				}
				# give primary title to realm pretender if no rebels have a claim or are a pretender
				if = {
					limit = {
						event_target:current_holder = {
							any_realm_character = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = no
								OR = {
									has_strong_claim = event_target:former_primary_title
									any_pretender_title = { title = event_target:former_primary_title }
								}
							}
							NOT = {
								any_opinion_modifier_target = {
									religion = ROOT
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					event_target:current_holder = {
						random_realm_character = {
							limit = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = no
								OR = {
									has_strong_claim = event_target:former_primary_title
									any_pretender_title = { title = event_target:former_primary_title }
								}
							}
							event_target:current_holder = { abdicate_to = PREV }
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = { set_defacto_liege = event_target:current_liege }
							}
						}
					}
				}				
				# give primary title to rebel with weak claim if none with a strong claim or pretender exists
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = event_target:former_primary_title
							}
							NOT = {
								any_opinion_modifier_target = {
									religion = ROOT
									pf_part_of_this_revolt_trigger = yes
									OR = {
										has_strong_claim = event_target:former_primary_title
										any_pretender_title = { title = event_target:former_primary_title }
									}
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								has_weak_claim = event_target:former_primary_title
							}
							event_target:current_holder = { abdicate_to = PREV }
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = { set_defacto_liege = event_target:current_liege }
							}
						}
					}
				}
				# give primary title to rebel with a strong claim if no rebel pretender exists
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = event_target:former_primary_title
							}
							NOT = {
								any_opinion_modifier_target = {
									religion = ROOT
									pf_part_of_this_revolt_trigger = yes
									any_pretender_title = { title = event_target:former_primary_title }
								}
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								has_strong_claim = event_target:former_primary_title
							}
							event_target:current_holder = { abdicate_to = PREV }
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = { set_defacto_liege = event_target:current_liege }
							}
						}
					}
				}
				# give primary title to rebel who is a pretender
				if = {
					limit = {
						event_target:current_holder = {
							any_opinion_modifier_target = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								any_pretender_title = { title = event_target:former_primary_title }
							}
						}
					}
					event_target:current_holder = {
						random_opinion_modifier_target = {
							limit = {
								religion = ROOT
								pf_part_of_this_revolt_trigger = yes
								any_pretender_title = { title = event_target:former_primary_title }
							}
							event_target:current_holder = { abdicate_to = PREV }
							if = {
								limit = { event_target:current_liege = { always = yes } }
								hidden_tooltip = { set_defacto_liege = event_target:current_liege }
							}
						}
					}
				}
			}
		}
		
		clr_global_flag = pf_teardown_lock
		
		# figure out who are the supporters, losers, and neutrals
		hidden_tooltip = {
			event_target:former_primary_title = {
				holder_scope = {
					# clear previous civil war opinions
					pf_civil_war_clear_old_opinions_effect = yes
					
					# mark rebels as supporters
					event_target:current_holder = {
						any_opinion_modifier_target = {
							limit = {
								pf_part_of_this_revolt_trigger = yes
								NOT = { character = PREVPREV }
							}
							reverse_opinion = {
								who = PREVPREV
								modifier = opinion_civil_war_supporter
								months = 60
							}
						}
					}
					
					# mark former liege and loyalists as losers
					any_vassal = {
						limit = {
							has_opinion_modifier = {
								who = event_target:current_holder
								modifier = pf_loyal_toward
							}
						}
						reverse_opinion = {
							who = LIEGE
							modifier = opinion_civil_war_loser
							months = 60
						}
					}
					event_target:current_holder = {
						reverse_opinion = {
							who = PREV
							modifier = opinion_civil_war_loser
							months = 60
						}
					}
					
					# remember those who chose to be neutral
					any_vassal = {
						limit = {
							has_opinion_modifier = {
								who = event_target:current_holder
								modifier = pf_neutral_toward
							}
						}
						reverse_opinion = {
							who = LIEGE
							modifier = opinion_civil_war_neutral
							months = 60
						}
					}
				}
			}
		}
		
		# check whether the primary title should be destroyed due to CA loss
		if = {
			limit = { event_target:former_primary_title = { has_title_flag = destroy_title } }
			hidden_tooltip = {
				event_target:former_primary_title = {
					holder_scope = {
						character_event = { id = Plus.1620 days = 4 } #destroy title
					}
				}
			}
		}

		# clean up remaining TOMs
		pf_civil_war_cleanup_effect = yes	
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 250
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
		
		# post-civil war event to reward allies
		event_target:former_primary_title = {
			holder_scope = {
				#emf_dynlevy_update_effect = yes
				hidden_tooltip = { character_event = { id = PlusFaction.450 } }
			}
		}
		
		# change faction moods
		FROM = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		ROOT = { hidden_tooltip = { character_event = { id = PlusFaction.200 days = 1 } } }
		
		#emf_cb_dynlevy_end_effect = yes
	}

	on_fail = {
		log = "CB(religious_overthrow_ruler): WHITEPEACE: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		ROOT = {
			prestige = -100
			pf_tradition_minus2_effect = yes
		}
		hidden_tooltip = {
			FROM = {
				remove_opinion = {
					who = ROOT
					modifier = declared_war
				}
			}
		}
	}

	on_reverse_demand = {
		log = "CB(religious_overthrow_ruler): DEFEAT: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_obj_win_war_reverse_effect = yes
		#emf_cb_dynlevy_end_effect = yes
		
		FROM = {
			# the defender loses 1 Imperial Decadence
			imperial_decadence_minus_1_effect = yes
			# the defender gains Tradition faction boost
			pf_tradition_plus4_effect = yes
			# add victory modifier for the 'Win a War' ambition
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			# remove any previously-existing loser TOMs
			pf_civil_war_clear_old_opinions_effect = yes
		}
		
		# apply immediate effects to the revolters
		any_attacker = {
			limit = { has_opinion_modifier = { who = FROM modifier = revolting_against } }
			imprison = FROM
			hidden_tooltip = {
				reverse_opinion = { who = FROM modifier = opinion_civil_war_loser months = 60 }
				opinion = { who = FROM modifier = opinion_coerced_into_leaving_faction months = 60 }
			}
		}

		# mark loyalists and neutrals for the reward event
		hidden_tooltip = {
			FROM = {
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_loyal_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_supporter months = 60 }
				}
				any_vassal = {
					limit = { reverse_has_opinion_modifier = { who = PREV modifier = pf_neutral_to_me } }
					reverse_opinion = { who = PREV modifier = opinion_civil_war_neutral months = 60 }
				}
			}
		}

		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
		
		ROOT = {
			prestige = -200
			pf_tradition_minus4_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		
		# post-civil war event to reward allies
		FROM = {
			hidden_tooltip = { character_event = { id = PlusFaction.450 } }
		}
		
		# change faction moods
		hidden_tooltip = {
			FROM = { character_event = { id = PlusFaction.200 days = 1 } }
			ROOT = { character_event = { id = PlusFaction.200 days = 1 } }
		}
	}

	on_invalidation = {
		log = "CB(religious_overthrow_ruler): INVALIDATED: [Root.GetTitledFirstName] of [Root.PrimaryTitle.GetBaseName] (ID: [Root.GetID]) vs. [From.GetTitledFirstName] of [From.PrimaryTitle.GetBaseName] (ID: [From.GetID])"

		#emf_cb_dynlevy_end_effect = yes
		
		# clean up remaining civil war state
		pf_civil_war_cleanup_effect = yes
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

italian_reconquest = {
	name = CB_NAME_ITALIAN_RECONQUEST
	war_name = WAR_ITALIAN_RECONQUEST
	sprite = 9
	truce_days = 3650
	is_permanent = yes
	hostile_against_others = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		ROOT = {
			# the attacker is a Christian with the italian_reconquest modifier
			has_character_modifier = italian_reconquest
			religion_group = christian
			# the Italian reconquest has begun and not succeeded or failed
			has_global_flag = italian_reconquest_started
			NOR = { 
				has_global_flag = italian_rec_success
				has_global_flag = italian_rec_failure
			}
		}
	}
	
	can_use_title = {
		# the target is an independent non-Christian who owns a duchy in Italy
		FROM = {
			NOT = { religion_group = christian }
			independent = yes # Don't attack revolters - chances are high the war will invalidate
		}	
		OR = {
			title = d_benevento
			title = d_capua
			title = d_apulia
			title = d_salerno
			title = d_calabria
			title = d_sicily
		}
	}
	
	on_add = {
		# the Pope will automatically join the war on the attacker's side
		ROOT = {
			character_event = { id = Plus.507 }
		}
	}

	is_valid = {
		ROOT = {
			has_character_modifier = italian_reconquest
		}
		NOR = { 
			has_global_flag = italian_rec_success
			has_global_flag = italian_rec_failure
		}
	}
	
	on_attacker_leader_death = {
		# give tivoli back to the pope
		if = {
			limit = {
				b_tivoli = {
					owner = {
						character = ROOT
					}
				}
			}
			ROOT = {
				religion_head = {
					b_tivoli = {
						gain_title = PREV
					}
				}
			}
		}
		# disband army and inform everyone of the reclamation failure
		disband_event_forces = yes
		end_war = invalid
		set_global_flag = italian_rec_failure
		any_playable_ruler = { narrative_event = { id = Plus.517 } }
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
			pf_tradition_plus4_effect = yes
		}
		FROM = {
			pf_glory_minus2_effect = yes
			pf_tradition_minus4_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_piety = 50
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_piety = 50 participation_scaled_prestige = 100 }
		}
		# the first time the CB is successful the attacker gets a claim to Sicily
		if = {
			limit = {
				NOT = { has_global_flag = first_war_success }
			}
			set_global_flag = first_war_success
			ROOT = { 
				add_character_modifier = { name = "holy_truce_timer" duration = 3650 } 
				k_sicily = { add_pressed_claim = ROOT } 
			}
		}
		# so long as the attacker is not a heretic then Christianity gets the holy war RA modifier
		if = {
			limit = {
				ROOT = { is_heretic = no }
			}
			ROOT = {
				religion_authority = {
					modifier = won_holy_war
					years = 20
				}
			}
		}
		# so long as the defender is not a heretic then their religion gets the lost holy war RA modifier
		if = {
			limit = {
				FROM = { is_heretic = no }
			}
			FROM = { 
				religion_authority = {
					modifier = lost_holy_war
					years = 20
				}
			}
		}
		# remove the attacker's adventurer flag if they have it
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = { has_character_flag = duchy_adventurer }
					clr_character_flag = duchy_adventurer
				}
			}
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their Italian reconquest for the [This.GetFullName] against [From.GetBestName]"
		# the attacker gains the duchy and gives b_tivoli to the Pope
		hidden_tooltip = {
			if = {
				limit = { 
					has_holder = yes
					holder_scope = { 
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}
				set_global_flag = usurp_duchy
			}
		}
		
		pf_liege_change_under_title_begin_effect = yes
		
		ROOT = {
			gain_settlements_under_title = {
				title = PREV
				enemy = FROM
				type = invasion
			}
		}
		hidden_tooltip = {
			if = {
				limit = { 
					has_global_flag = usurp_duchy
				}
				destroy_landed_title = yes
				usurp_title = ROOT
				clr_global_flag = usurp_duchy
			}
			if = {
				limit = {
					b_tivoli = {
						owner = {
							character = ROOT
						}
					}
				}
				ROOT = {
					religion_head = {
						b_tivoli = {
							gain_title = PREV
						}
					}
				}
			}			
		}
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {	
		FROM = {
			prestige = 100
			hidden_tooltip = {
				opinion = {
					modifier = opinion_rebel_traitor
					who = ROOT
					months = 1200
				}
			}
		}
		if = {
			limit = {
				b_tivoli = {
					holder_scope = {
						character = ROOT
					}
				}
			}
			ROOT = {
				religion_head = {
					b_tivoli = {
						gain_title = PREV
					}
				}
			}
		}		
		ROOT = {
			wealth = -500
			prestige = -100 
		}
		# narrative notification to the world that the invasion failed
		if = {
			limit = {
				NOT = { has_global_flag = first_war_success }
			}
			set_global_flag = italian_rec_failure
			any_playable_ruler = { narrative_event = { id = Plus.517 } }
		}		
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			wealth = -100
		}

		if = {
			limit = {
				b_tivoli = {
					holder_scope = {
						character = ROOT
					}
				}
			}
			ROOT = {
				religion_head = {
					b_tivoli = {
						gain_title = PREV
					}
				}
			}
		}		

		FROM = {
			prestige = 200
			wealth = 100
		}

		ROOT = {
			prestige = -200
			pf_glory_minus2_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

carolingian_reconquest = {
	name = CB_NAME_CAROLINGIAN
	war_name = WAR_NAME_CAROLINGIAN
	sprite = 17
	truce_days = 3650
	is_permanent = yes
	#is_holy_war = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		ROOT = {
			higher_real_tier_than = DUKE
			independent = yes
			OR = {
				religion = catholic
				religion = chalcedonian
			}
			rightful_religious_head_scope = {
				NOT = { character = PREV }
				NOT = { character = FROM }
				OR = {
					has_landed_title = k_papal_state
					has_landed_title = k_papal_chalcedon
				}
			}
			NOR = {
				same_realm = FROM
				is_title_active = e_karling
				has_character_flag = former_carolingian_emperor
				e_hre = { has_title_flag = hre_formed }
			}
		}
		FROM = {
			religion_group = ROOT
			NOT = { is_heresy_of = ROOT }
			NOT = { is_parent_religion = ROOT }
		}
	}

	can_use_title = {
		de_jure_liege_or_above = e_hre
		# either the target has the title or their top liege is the target
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
	}

	is_valid = {
		ROOT = {
			independent = yes
			OR = {
				religion = catholic
				religion = chalcedonian
			}
			NOT = { same_realm = FROM }
		}
	}
	
	is_valid_title = {
		# either the target has the title or their top liege is the target
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
	}

	on_success = {
		ROOT = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
			}
		}
		FROM = {
			prestige = -100
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their Carolingian reconquest for the [This.GetFullName] against [From.GetBestName]"
		
		pf_liege_change_under_title_begin_effect = yes
		
		custom_tooltip = {
			text = tribal_invasion_succ_tip
			hidden_tooltip = {
				ROOT = {
					vassalize_or_take_under_title = {
						title = PREV
						enemy = FROM
						type = invasion
					}
				}
			}
		}
		if = {
			limit = {
				holder_scope = { character = FROM }
			}
			usurp_title_only = { target = ROOT type = invasion }
		}
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		ROOT = { prestige = -150 }
	}

	on_reverse_demand = {
		FROM = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			prestige = -200
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_piety = 100
			participation_scaled_prestige = 200
			dynasty_head = {
				if = {
					limit = { uses_decadence = yes }
					participation_scaled_decadence = -10
				}
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_piety = 100
				participation_scaled_prestige = 200
				dynasty_head = {
					if = {
						limit = { uses_decadence = yes }
						participation_scaled_decadence = -10
					}
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = { NOT = { has_landed_title = k_germany } }
			k_germany = {
				has_holder = yes
				holder_scope = { realm_size = 75 }
			}
		}
	}
}

byzantine_vassalize = {
	name = CB_NAME_BYZANTINE_CONQUEST
	war_name = WAR_NAME_BYZANTINE_VASSALIZE
	sprite = 17
	truce_days = 3650
	is_permanent = yes
	#is_holy_war = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	hostile_against_others = yes
	can_ask_to_join_war = yes
	
	can_use_gui = {
		ROOT = { trait = strong_basileus }
		e_byzantium = {
			custom_tooltip = {
				text = DE_JURE_TOOLTIP1
				hidden_tooltip = {
					OR = {
						has_law = crown_authority_2
						has_law = crown_authority_3
						has_law = crown_authority_4
					}
				}
			}
		}
	}

	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }  
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		# target is a neighbor or close
		FROM = {
			OR = {
				any_realm_province = {
					any_neighbor_province = {
						owner = {
							OR = {
								same_realm = ROOT
								character = ROOT
							}
						}
					}
				}
				any_realm_province = {
					ROOT = { 
						any_realm_province = {
							NOT = {
								distance = { 
									where = PREVPREV
									value = 75
								}
							}
						}
					}
				}
			}
		}
		
		# attacker is a strong byzantine emperor
		ROOT = {
			independent = yes
			has_landed_title = e_byzantium
		}
	}

	can_use_title = {
		tier = DUKE
		is_titular = no
		capital_scope = {
			OR = {
				region = custom_byzantium
				region = custom_nikaea
				region = custom_armenia
				region = custom_bulgaria
				region = custom_serbia
				region = custom_croatia
				region = custom_trebizond
				region = custom_sicily
				region = custom_syria
				region = custom_jerusalem
			}
		}
		# either the target has the title or their top liege is the target
		# or the title is not held and de jure counties are
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
			AND = {
				has_holder = no
				any_direct_de_jure_vassal_title = {
					OR = {
						FROM = { has_landed_title = PREV }
						holder_scope = { is_liege_or_above = FROM }
					}
				}
			}
		}
		# target is an independent ruler of the same religion group, as is their top liege
		holder_scope = {
			religion_group = ROOT
			NOR = {
				is_heresy_of = ROOT
				is_parent_religion = ROOT
			}
			top_liege = {
				religion_group = ROOT
				NOR = {
					is_heresy_of = ROOT
					is_parent_religion = ROOT
				}
			}
		}
	}
	
	is_valid_title = {
		ROOT = {
			independent = yes
			has_landed_title = e_byzantium
			trait = strong_basileus
		}
		# either the target has the title or their top liege is the target
		# or the title is not held and de jure counties are
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
			AND = {
				has_holder = no
				any_direct_de_jure_vassal_title = {
					OR = {
						FROM = { has_landed_title = PREV }
						holder_scope = { is_liege_or_above = FROM }
					}
				}
			}
		}
		# target is an independent ruler of the same religion group, as is their top liege
		holder_scope = {
			religion_group = ROOT
			NOR = {
				is_heresy_of = ROOT
				is_parent_religion = ROOT
			}
			top_liege = {
				religion_group = ROOT
				NOR = {
					is_heresy_of = ROOT
					is_parent_religion = ROOT
				}
			}
		}
	}
  
	on_success = {
		log = "[Root.GetBestName] succeeded with their Byzantine subjugate CB against [From.GetBestName]"
		ROOT = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		FROM = {
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
	}
	
	on_success_title = {
		pf_liege_change_under_title_begin_effect = yes
		
		if = {
			#duke title has a holder
			limit = { has_holder = yes }
			if = {
				#holder is a king or lower who doesn't hold any other county titles outside the region
				limit = {
					holder_scope = {
						lower_tier_than = ROOT
						NOT = {
							any_demesne_title = {
								tier = COUNT
								location = {
									NOR = {
										region = custom_byzantium
										region = custom_nikaea
										region = custom_armenia
										region = custom_bulgaria
										region = custom_serbia
										region = custom_croatia
										region = custom_trebizond
										region = custom_sicily
										region = custom_syria
										region = custom_jerusalem
									}
								}
							}
						}
					}
				}
				#holder is either a king/emperor or has other duke titles outside the region
				holder_scope = {
					hidden_tooltip = {
						opinion = {
							who = ROOT
							modifier = force_vassalized
							months = 240
						}
					}
					set_defacto_liege = ROOT
				}
			}
			if = {
				limit = {
					holder_scope = {
						OR = {
							tier = EMPEROR
							any_demesne_title = {
								tier = COUNT
								location = {
									NOR = {
										region = custom_byzantium
										region = custom_nikaea
										region = custom_armenia
										region = custom_bulgaria
										region = custom_serbia
										region = custom_croatia
										region = custom_trebizond
										region = custom_sicily
										region = custom_syria
										region = custom_jerusalem
									}
								}
							}
						}
					}
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
		}
		if = {
			#duke title is not held by anyone
			limit = { has_holder = no }
			#usurp any counties held by emperors or dukes+ with titles outside the area
			any_direct_de_jure_vassal_title = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
						OR = {
							tier = EMPEROR
							AND = {
								lower_tier_than = ROOT
								any_demesne_title = {
									tier = COUNT
									location = {
										NOR = {
											region = custom_byzantium
											region = custom_nikaea
											region = custom_armenia
											region = custom_bulgaria
											region = custom_serbia
											region = custom_croatia
											region = custom_trebizond
											region = custom_sicily
											region = custom_syria
											region = custom_jerusalem
										}
									}
								}
							}
						}
					}
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
			#vassalize any de jure counts in the duchy who have no counties elsewhere
			any_direct_de_jure_vassal_title = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
						lower_tier_than = ROOT
						NOT = {
							any_demesne_title = {
								tier = COUNT
								location = {
									NOR = {
										region = custom_byzantium
										region = custom_nikaea
										region = custom_armenia
										region = custom_bulgaria
										region = custom_serbia
										region = custom_croatia
										region = custom_trebizond
										region = custom_sicily
										region = custom_syria
										region = custom_jerusalem
									}
								}
							}
						}
					}
				}
				holder_scope = {
					hidden_tooltip = {
						if = {
							limit = {
								NOT = {
									has_opinion_modifier = { who = ROOT modifier = force_vassalized }
								}
							}
							opinion = {
								who = ROOT
								modifier = force_vassalized
								months = 240
							}
						}
					}
					set_defacto_liege = ROOT
				}
			}
		}
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
	}

	on_reverse_demand = {
		FROM = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			remove_trait = strong_basileus
			hidden_tooltip = { add_trait = weak_basileus }
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 0.9
	}
}

carolingian_manifest_destiny = {
	name = CB_NAME_INVASION
	war_name = WAR_NAME_INVASION
	sprite = 8
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	#is_holy_war = yes
	check_de_jure_tier = KING # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		ROOT = {
			dynasty = 25061
			independent = yes
			OR = {
				religion = catholic
				religion = chalcedonian
			}
			higher_real_tier_than = DUKE
			NOT = { e_hre = { has_title_flag = hre_formed } }
			NOT = { same_realm = FROM }
			NOT = { rightful_religious_head = FROM }
		}
		FROM = {
			NOT = { dynasty = ROOT }
			religion = ROOT
			NOT = { has_landed_title = k_papal_state }
			NOT = { has_landed_title = k_papal_chalcedon }
		}
	}

	can_use_title = {
		OR = {
			AND = {
				e_karling = { NOT = { has_title_flag = carolingian_empire_formed } }
				kingdom = {
					OR = {
						title = k_france
						title = k_lotharingia
						title = k_bavaria
						title = k_saxony
						title = k_italy
						title = k_lombardy
					}
				}
			}
			AND = {
				ROOT = { trait = paragon }
				kingdom = {
					OR = {
						title = k_france
						title = k_lotharingia
						title = k_bavaria
						title = k_saxony
						title = k_germany
						title = k_italy
						title = k_lombardy
						title = k_frisia
						title = k_burgundy
						title = k_aquitaine
					}
				}
			}
		}
		
		# Target must have at least 3 counties within the target kingdom
		FROM = {
			num_of_realm_counties = {
				value = 3
				title = PREV
			}
		}
		
		# The attacker needs at least one county in the target kingdom, or a border
		any_direct_de_jure_vassal_title = {
			any_direct_de_jure_vassal_title = {
				OR = {
					holder_scope = {
						OR = {
							character = ROOT
							is_liege_or_above = ROOT
						}
					}
					location = {
						any_neighbor_province = {
							owner = {
								OR = {
									character = ROOT
									is_liege_or_above = ROOT
								}
							}
						}
					}
				}
			}
		}
	}

	is_valid = {
		ROOT = {
			dynasty = 25061
			independent = yes
			OR = {
				religion = catholic
				religion = chalcedonian
			}
			NOT = { same_realm = FROM }
		}
	}

	on_success = {
		ROOT = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
			}
		}
		FROM = {
			prestige = -100
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their Carolingian manifest destiny for the [This.GetFullName] against [From.GetBestName]"
		
		pf_liege_change_under_title_begin_effect = yes
		
		custom_tooltip = {
			text = tribal_invasion_succ_tip
			hidden_tooltip = {
				ROOT = {
					vassalize_or_take_under_title = {
						title = PREV
						enemy = FROM
						same_religion = yes
						type = invasion
					}
				}
			}
		}
		if = {
			limit = {
				holder_scope = { character = FROM }
			}
			usurp_title_only = { target = ROOT type = invasion }
		}
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		ROOT = { prestige = -150 }
	}

	on_reverse_demand = {
		FROM = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			prestige = -200
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_piety = 100
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_piety = 100
				participation_scaled_prestige = 200
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

dejure_duchy_claim_holy = {
	name = CB_NAME_DEJURECLAIM
	war_name = WAR_NAME_DEJURECLAIM
	sprite = 16
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	is_holy_war = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = yes
	
	can_use_gui = {
		ROOT = {
			top_liege = { religion_group = PREV }
			OR = {
				is_patrician = no
				independent = yes
			}
		}
		#attacker holds either the empire or liege title
		FROMFROM = {
			OR = {
				kingdom = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
				empire = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
			}
		}
	}

	can_use = {
		#check to ensure the target is a valid for a holy war
		ROOT = {
			OR = {
				NOT = { religion_group = pagan_group }
				is_reformed_religion = yes
			}
			OR = {
				NOR = {
					religion = hindu
					religion = buddhist
				}
				FROM = { NOT = { religion_group = indian_group } }
			}
			OR = {
				NOT = { religion_group = FROM }
				is_heresy_of = FROM
				is_parent_religion = FROM
				AND = {
					OR = {
						religion_group = muslim
						religion_group = pagan_group
						religion = paulician
					}
					NOT = { religion = FROM }
				}
			}
			NOR = {
				pacifist = yes
				same_realm = FROM
			}
		}
	}

	can_use_title = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		# target title is Duke level and non-titular
		is_titular = no
		tier = DUKE
		# either the target has the title or their top liege is the target
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
		# a king/emperor is using it to reclaim own de jure duchy
		OR = {
			empire = { holder = ROOT }
			kingdom = { holder = ROOT }
		}
		# neither the attacker nor their top liege has the title
		NOT = {
			ROOT = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = ROOT }
		}
		
		# AI will only use on AI holy orders if they're kings/emperors or of a different religion
		OR = {
			ROOT = { ai = no }
			FROM = {
				OR = {
					ai = no
					holy_order = no
					higher_tier_than = duke
					NOT = { religion = ROOT }
					NOT = { has_dlc = "Sons of Abraham" }
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		# lose 500 piety if the target is a holy order of the same religion
		if = {
			limit = {
				FROM = {
					religion = ROOT
					holy_order = yes
				}
			}
			ROOT = { piety = -500 }
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their holy de jure duchy claim for the [This.GetFullName] against [From.GetBestName]"
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_minus_1_effect = yes }
		}
		
		empty_province_effect = yes
		
		pf_liege_change_under_title_begin_effect = yes
		
		ROOT = {
			vassalize_or_take_under_title = {
				title = PREV
				enemy = FROM
				same_religion = yes # Only vassalize rulers of my religion
				is_religious = yes
				type = holy_war
			}
		}
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		prestige = -100
		piety = -50
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			piety = -100
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
	}

	on_reverse_demand_title = {
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_plus_1_effect = yes }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				culture = mongol
				religion_group = pagan_group
			}
			FROM = {
				culture = mongol
				religion_group = pagan_group
			}
		}
	}
}

dejure_county_claim_holy = { #ducal
	name = CB_NAME_DEJURECLAIM
	war_name = WAR_NAME_DEJURECLAIM
	sprite = 16
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	is_holy_war = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = yes
	
	can_use_gui = {
		ROOT = {
			top_liege = { religion_group = PREV }
			OR = {
				is_patrician = no
				independent = yes
			}
		}
		#attacker holds either the de jure kingdom, empire or liege title
		FROMFROM = {
			OR = {
				dejure_liege_title = {
					holder = ROOT
				}
				kingdom = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
				empire = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
			}
		}
	}

	can_use = {
		#check to ensure the target is a valid for a holy war
		ROOT = {
			OR = {
				NOT = { religion_group = pagan_group }
				is_reformed_religion = yes
			}
			OR = {
				NOR = {
					religion = hindu
					religion = buddhist
				}
				FROM = { NOT = { religion_group = indian_group } }
			}
			OR = {
				NOT = { religion_group = FROM }
				is_heresy_of = FROM
				is_parent_religion = FROM
				AND = {
					OR = {
						religion_group = muslim
						religion_group = pagan_group
						religion = paulician
					}
					NOT = { religion = FROM }
				}
			}
			NOR = {
				pacifist = yes
				same_realm = FROM
			}
		}
	}
	
	can_use_title = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { tribute_war_blocker_trigger = yes }
		
		tier = count
		
		#target owns the county or it belongs to their vassal
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		
		#attacker holds either the de jure kingdom, empire or liege title
		OR = {
			empire = { holder = ROOT }
			kingdom = { holder = ROOT }
			dejure_liege_title = { holder = ROOT }
		}
		
		#attacker does not have the county title and the title holder is not their liege
		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
		#AI will only attack a holy order if they are a player, of a different religion or are a king/emperor
		OR = {
			ROOT = { ai = no }
			FROM = {
				OR = {
					ai = no
					holy_order = no
					higher_tier_than = duke
					NOT = { religion = ROOT }
					NOT = { has_dlc = "Sons of Abraham" }
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		if = {
			limit = {
				FROM = {
					religion = ROOT
					holy_order = yes
				}
			}
			ROOT = { piety = -500 }
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their holy de jure county claim for the [This.GetFullName] against [From.GetBestName]"
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_minus_1_effect = yes }
		}
		empty_province_effect = yes
		
		pf_liege_change_under_title_begin_effect = yes
		
		ROOT = {
			vassalize_or_take_under_title = {
				title = PREV
				enemy = FROM
				same_religion = yes # Only vassalize rulers of my religion
				is_religious = yes
				type = holy_war
			}
		}
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		prestige = -100
		piety = -50
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -200
			piety = -100
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
	}
	
	on_reverse_demand_title = {
		#change imperial decadence
		if = {
			limit = {
				empire = {
					ROOT = { has_landed_title = PREV }
					is_primary_holder_title = yes
				}
			}
			ROOT = { imperial_decadence_plus_1_effect = yes }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				culture = mongol
				religion_group = pagan_group
			}
			FROM = {
				culture = mongol
				religion_group = pagan_group
			}
		}
	}
}

dejure_barony_claim_holy = {
	name = CB_NAME_DEJUREBARONYCLAIM
	war_name = WAR_NAME_DEJUREBARONYCLAIM
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	is_holy_war = yes
	check_de_jure_tier = COUNT
	can_ask_to_join_war = yes
	
	can_use_gui = {
		ROOT = {
			top_liege = { religion_group = PREV }
			OR = {
				is_patrician = no
				independent = yes
			}
		}
	}

	can_use = {
		#check to ensure the target is a valid for a holy war
		ROOT = {
			OR = {
				NOT = { religion_group = pagan_group }
				is_reformed_religion = yes
			}
			OR = {
				NOR = {
					religion = hindu
					religion = buddhist
				}
				FROM = { NOT = { religion_group = indian_group } }
			}
			OR = {
				NOT = { religion_group = FROM }
				is_heresy_of = FROM
				is_parent_religion = FROM
				AND = {
					OR = {
						religion_group = muslim
						religion_group = pagan_group
						religion = paulician
					}
					NOT = { religion = FROM }
				}
			}
			NOR = {
				pacifist = yes
				same_realm = FROM
			}
		}
		
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		OR = {
			ROOT = { ai = no }
			FROM = {
				OR = {
					ai = no
					holy_order = no
					higher_tier_than = duke
					NOT = { religion = ROOT }
					NOT = { has_dlc = "Sons of Abraham" }
				}
			}
		}
		ROOT = { tribute_war_blocker_trigger = yes }
	}

	can_use_title = {
		#de jure liege title belongs to attacker or a vassal
		has_holder = yes
		holder_scope = {
			OR = {
				character = ROOT
				is_liege_or_above = ROOT
			}
		}
		any_direct_de_jure_vassal_title = {
			holder_scope = {
				OR = {
					character = FROM
					is_liege_or_above = FROM
				}
				NOR = {
					character = ROOT
					is_liege_or_above = ROOT
				}
			}
		}
	}

	on_add = {
		if = {
			limit = {
				FROM = {
					religion = PREV
					holy_order = yes
				}
			}
			piety = -500
		}
	}

	on_success = {
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their holy de jure barony claim for the [This.GetFullName] against [From.GetBestName]"
		holder_scope = {
			save_event_target_as = target_taker
		}	
		any_direct_de_jure_vassal_title = {
			limit = {
				holder_scope = {
					OR = {
						character = FROM
						is_liege_or_above = FROM
					}
					NOR = {
						character = event_target:target_taker
						is_liege_or_above = event_target:target_taker
						is_liege_or_above = ROOT
					}
				}
			}
			usurp_title_plus_barony_if_unlanded = { target = event_target:target_taker type = claim }
		}
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
			
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = { participation_scaled_piety = 50 }
		}
	}

	on_fail = {
		prestige = -50
		piety = -25
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -100
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			pf_glory_minus2_effect = yes
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = { participation_scaled_piety = 50 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

other_dejure_county_claim_holy = {
	name = CB_NAME_DEJURECLAIM
	war_name = WAR_NAME_OTHER_DEJURECLAIM
	sprite = 16
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	is_holy_war = yes
	other_de_jure_claim = yes # Optimization for de jure claims of vassals
	press_claim = yes
	can_ask_to_join_war = yes
	
	can_use_gui = {
		top_liege = { religion_group = PREV }
		OR = {
			is_patrician = no
			independent = yes
		}
		#attacker holds either the de jure kingdom, empire or liege title
		FROMFROM = {
			OR = {
				dejure_liege_title = {
					holder = ROOT
				}
				kingdom = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
				empire = {
					holder = ROOT
					custom_tooltip = {
						text = DE_JURE_TOOLTIP1
						hidden_tooltip = {
							OR = {
								has_law = crown_authority_2
								has_law = crown_authority_3
								has_law = crown_authority_4
							}
						}
					}
				}
			}
		}
	}
	
	can_use = {
		#check to ensure the target is a valid for a holy war
		OR = {
			NOT = { religion_group = pagan_group }
			is_reformed_religion = yes
		}
		OR = {
			NOR = {
				religion = hindu
				religion = buddhist
			}
			FROM = { NOT = { religion_group = indian_group } }
		}
		OR = {
			NOT = { religion_group = FROM }
			is_heresy_of = FROM
			is_parent_religion = FROM
			AND = {
				OR = {
					religion_group = muslim
					religion_group = pagan_group
					religion = paulician
				}
				NOT = { religion = FROM }
			}
		}
		NOR = {
			pacifist = yes
			same_realm = FROM
		}

		ai_not_busy_trigger = yes
		NOT = { has_character_modifier = holy_truce_timer }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		mercenary = no
		tribute_war_blocker_trigger = yes		
		NOT = {
			ROOT = {
				character = PREV
			}
		}
		#supported ruler is a vassal
		ROOT = {
			any_liege = {
				character = PREVPREV
			}
		}		
		#AI will only attack a holy order if they are a player, of a different religion or are a king/emperor
		OR = {
			ai = no
			FROM = {
				OR = {
					ai = no
					holy_order = no
					higher_tier_than = duke
					NOT = { religion = PREV }
					NOT = { has_dlc = "Sons of Abraham" }
				}
			}
		}
	}

	can_use_title = {
		tier = count
		#supporter ruler owns the de jure liege kingdom, empire or title of the county
		OR = {
			empire = { holder = ROOT }
			kingdom = { holder = ROOT }
			dejure_liege_title = { holder = ROOT }
		}
		#supporter ruler does not own the county, and it is not owned by their liege
		NOT = {
			OR = {
				ROOT = { has_landed_title = PREV }
				holder_scope = { is_liege_or_above = ROOT }
			}
		}
		#target owns the county or it is owned by their vassal
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}
	
	on_add = {
		if = {
			limit = {
				FROM = {
					religion = FROMFROM
					holy_order = yes
				}
			}
			FROMFROM = { piety = -500 }
		}
	}

	on_success = {
		log = "[FromFrom.GetBestName] succeeded with [Root.GetBestName]'s holy de jure county claim for the [This.GetFullName] against [From.GetBestName]"
		ROOT = { add_character_modifier = { name = new_land_timer duration = 1 hidden = yes } }
		add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
		pf_glory_plus2_effect = yes
		ROOT = {
			opinion = {
				modifier = pressed_my_claim
				who = PREV
			}
		}
		any_attacker = {
			limit = { character = PREV }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_attacker = {
			limit = { NOT = { character = PREV } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
		FROM = {
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		empty_province_effect = yes
		
		pf_liege_change_under_title_begin_effect = yes
		
		ROOT = {
			vassalize_or_take_under_title = {
				title = PREV
				enemy = FROM
				same_religion = yes # Only vassalize rulers of my religion
				is_religious = yes
				type = holy_war
			}
		}
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		prestige = -100
		piety = -50
	}

	on_reverse_demand = {
		FROM = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		prestige = -200
		piety = -100
		transfer_scaled_wealth = {
			to = FROM
			value = 4.0
		}
		pf_glory_minus2_effect = yes
		ROOT = {
			prestige = -200
			piety = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
			participation_scaled_piety = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
			hidden_tooltip = { participation_scaled_piety = 100 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				culture = mongol
				religion_group = pagan_group
			}
			FROM = {
				culture = mongol
				religion_group = pagan_group
			}
		}
	}
}

# The CB used by "Decadence revolter" characters
decadence_revolt = {
	name = CB_NAME_DECADENCE_UPRISING
	war_name = WAR_NAME_DECADENCE_UPRISING
	sprite = 11
	truce_days = 365
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	is_independence = yes
	
	can_use = {
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		ROOT = { has_character_flag = decadence_revolter }
	}
	
	can_use_title = {
		tier = count
	}

	is_valid = {
		FROM = {
			religion_group = muslim
			religion_group = ROOT
		}
	}
	
	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their decadence revolt against [From.GetBestName]"
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = { dynasty = none }
					dynasty = father_bastard
				}
			}
		}
		
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = revolt }
		ROOT = {
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			prestige = 200
			piety = 100
			occupy_minors_of_occupied_settlements = FROM
			gain_all_occupied_titles = { who = FROM type = revolt }
			set_defacto_liege = ROOT
			clr_character_flag = decadence_revolter
		}
		
		FROM = {
			imprison = ROOT
			prestige = -500
			piety = -500
			clr_character_flag = has_current_revolt		
		}
	}

	on_fail = {
		ROOT = {
			imprison = FROM
			clr_character_flag = decadence_revolter
			hidden_tooltip = {
				add_character_modifier = { 
					name = broken_spirit
					days = 3650
				}
			}
		}
		FROM = {
			prestige = 50
			clr_character_flag = has_current_revolt
			hidden_tooltip = {
				opinion = {
					modifier = opinion_rebel_traitor 
					who = ROOT
					months = 1200
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			imprison = FROM
			clr_character_flag = decadence_revolter
			hidden_tooltip = {
				add_character_modifier = { 
					name = broken_spirit
					days = 3650
				}
			}
		}
		FROM = {
			prestige = 100
			piety = 100
			clr_character_flag = has_current_revolt
			hidden_tooltip = {
				opinion = {
					modifier = opinion_rebel_traitor 
					who = ROOT
					months = 1200
				}
				add_character_modifier = { 
					name = crushed_revolt
					days = 3650
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 150
	}
}

# The Prepared Invasion CB of the Druze
druze_invasion = {
	name = CB_NAME_VIKING_INVASION
	war_name = WAR_NAME_VIKING_INVASION
	sprite = 8
	truce_days = 365
	hostile_against_others = no # Vikings share in the spoils...
	is_permanent = yes
	is_holy_war = yes
	can_ask_to_join_war = yes
	check_de_jure_tier = KING # this scans all de jure kingdoms for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	apply_short_occ_mod = no # Do not apply the 'recently_conquered' modifier to Holdings

	can_use_gui = {
		ROOT = {
			OR = {
				trait = druze_ajawid
				piety = 1000
				AND = {
					martial = 12
					diplomacy = 12
				}
			}
		}
	}
	
	can_use = {
		ROOT = { ai_not_busy_trigger = yes }
		ROOT = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { NOT = { has_character_modifier = holy_truce_timer } }
		FROM = { religion_group = muslim }
		ROOT = {
			religion = druze
			NOT = { is_liege_or_above = FROM }
			NOT = { realm_size = 41 }
			mercenary = no
			tribute_war_blocker_trigger = yes
		}		
	}

	can_use_title = {
		is_valid_viking_invasion_target = FROM # Checks that FROM holds the right amount of territory in the kingdom
	}

	is_valid_title = {
		FROM = {
			any_realm_title = {
				de_jure_liege_or_above = PREVPREV
			}
		}
	}

	on_success = {
		ROOT = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = 500
			piety = 250
			religion_authority = {
				modifier = won_viking_invasion
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 300
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 300 }
		}
		FROM = {
			prestige = -500
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
		}
	}

	on_success_title = {
		log = "[Root.GetBestName] succeeded with their druze invasion for the [This.GetFullName] against [From.GetBestName]"
		empty_province_effect = yes
		
		pf_liege_change_under_title_begin_effect = yes
		
		custom_tooltip = {
			text = tribal_invasion_succ_tip
			hidden_tooltip = {
				#attacker gains one province belonging to the target for certain
				if = {
					limit = { NOT = { capital_scope = { owner = { character = FROM } } } }
					FROM = {
						random_demesne_province = {
							limit = { county = { de_jure_liege_or_above = PREVPREVPREV } }
							culture = ROOT
							religion = ROOT
						}
					}
				}
				if = {
					limit = { capital_scope = { owner = { character = FROM } } }
					capital_scope = {
						culture = ROOT
						religion = ROOT
					}
				}
				ROOT = {
					occupy_minors_of_occupied_settlements = FROM
					gain_all_occupied_titles = { who = FROM type = invasion }
					vassalize_or_take_under_title_destroy_duchies = {
						title = PREV
						enemy = FROM
						is_crusade = yes
						type = invasion
					}
					# Settle the special invasion forces
					disband_event_forces = prepared_invasion
					any_demesne_title = {
						limit = { tier = BARON }
						remove_holding_modifier = recently_conquered
						refill_holding_levy = yes
					}
				}
				if = {
					limit = { FROM = { is_liege_or_above = ROOT } }
					FROM = { imprison = ROOT }
				}
			}
		}
		
		pf_liege_change_under_title_end_effect = yes
	}

	on_fail = {
		FROM = {
			prestige = 200
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		ROOT = {
			prestige = -300
			piety = -100
			hidden_tooltip = {
				disband_event_forces = prepared_invasion
			}
			religion_authority = {
				modifier = lost_viking_invasion
			}
		}
	}

	on_reverse_demand = {
		FROM = {
			imperial_decadence_minus_1_effect = yes
			add_character_modifier = { name = victory_timer duration = 1 hidden = yes }
			pf_glory_plus2_effect = yes
		}
		ROOT = {
			prestige = -500
			piety = -250
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
			imperial_decadence_plus_1_effect = yes
			pf_glory_minus2_effect = yes
			hidden_tooltip = {
				disband_event_forces = prepared_invasion
			}
			religion_authority = {
				modifier = lost_viking_invasion
			}
		}
		FROM = {
			prestige = 300
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}	
}

